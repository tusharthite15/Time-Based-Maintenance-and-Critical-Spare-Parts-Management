{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodePlayGround\\\\Prarambh\\\\Zanvar Group\\\\kfpl\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = [{\n  id: 1,\n  machineName: 'HMC-1001',\n  model: 'Model A',\n  nextMaintenanceDate: '2023-11-15'\n}, {\n  id: 2,\n  machineName: 'RBT-2002',\n  model: 'Model B',\n  nextMaintenanceDate: '2023-12-01'\n}, {\n  id: 3,\n  machineName: 'SPM-3003',\n  model: 'Model C',\n  nextMaintenanceDate: '2023-10-29'\n}];\nconst Dashboard = () => {\n  _s();\n  const [maintenanceRecords, setMaintenanceRecords] = useState(mockData);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    // Ideally, fetch the data from an API\n    setMaintenanceRecords(mockData);\n  }, []);\n  const filteredRecords = maintenanceRecords.filter(record => record.machineName.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Recent Maintenance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by Machine Name\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"border p-2 w-full mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2\",\n            children: \"Machine Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2\",\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2\",\n            children: \"Next Maintenance Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredRecords.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-center border-t\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2\",\n            children: record.machineName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2\",\n            children: record.model\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2\",\n            children: record.nextMaintenanceDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, record.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fboaRUMoaPRdxMO1gRMEUon4ME0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","mockData","id","machineName","model","nextMaintenanceDate","Dashboard","_s","maintenanceRecords","setMaintenanceRecords","searchTerm","setSearchTerm","filteredRecords","filter","record","toLowerCase","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","_c","$RefreshReg$"],"sources":["D:/CodePlayGround/Prarambh/Zanvar Group/kfpl/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst mockData = [\r\n  { id: 1, machineName: 'HMC-1001', model: 'Model A', nextMaintenanceDate: '2023-11-15' },\r\n  { id: 2, machineName: 'RBT-2002', model: 'Model B', nextMaintenanceDate: '2023-12-01' },\r\n  { id: 3, machineName: 'SPM-3003', model: 'Model C', nextMaintenanceDate: '2023-10-29' },\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const [maintenanceRecords, setMaintenanceRecords] = useState(mockData);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Ideally, fetch the data from an API\r\n    setMaintenanceRecords(mockData);\r\n  }, []);\r\n\r\n  const filteredRecords = maintenanceRecords.filter(record =>\r\n    record.machineName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Recent Maintenance</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by Machine Name\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        className=\"border p-2 w-full mb-4\"\r\n      />\r\n      <table className=\"min-w-full bg-white\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"py-2\">Machine Name</th>\r\n            <th className=\"py-2\">Model</th>\r\n            <th className=\"py-2\">Next Maintenance Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredRecords.map((record) => (\r\n            <tr key={record.id} className=\"text-center border-t\">\r\n              <td className=\"py-2\">{record.machineName}</td>\r\n              <td className=\"py-2\">{record.model}</td>\r\n              <td className=\"py-2\">{record.nextMaintenanceDate}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}